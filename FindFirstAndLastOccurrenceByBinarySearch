#include "pch.h"
#include <iostream>
using namespace std;
int FindFirstOccurrenceByBinarySearch(int arr[],int arrayLength, int numberTofind)
{
	int low = 0;
	int high = arrayLength - 1;//length of the array
	int result = -1;
	while (low <= high)

	{
		int mid = (low + high) / 2;
		if (numberTofind == arr[mid])
		{
			result = mid;
			high = mid - 1;
		}
		else if (numberTofind < arr[mid])
		{
			high = mid - 1;
		}
		else
		{
			low = mid + 1;
		}
	}
	return result;
}
int FindLastOccurrenceByBinarySearch(int arr[], int arrayLength, int numberTofind)
{
	int low = 0;
	int high = arrayLength - 1;//length of the array
	int result = -1;
	while (low <= high)

	{
		int mid = (low + high) / 2;
		if (numberTofind == arr[mid])
		{
			result = mid;
			low = mid + 1;
		}
		else if (numberTofind < arr[mid])
		{
			high = mid - 1;
		}
		else
		{
			low = mid + 1;
		}
	}
	return result;
}
int main()
{
	int a[] = {2,4,4,4,4,18,23};
	cout << "Enter any number to find \n";
	int number;
	cin >> number;
	int firstIndex = FindFirstOccurrenceByBinarySearch(a,7, number);
	int lastIndex = FindLastOccurrenceByBinarySearch(a, 7, number);
	if (firstIndex!=-1 && lastIndex != -1)
	{
		cout << "\nElement first found at " << firstIndex << " position\n";
		cout << "\nElement last found at " << lastIndex << " position\n";
		cout << "\nTotal occurences are "<< lastIndex - firstIndex + 1;
	}
	else
	{
		cout << "Element not found";
	}
}
