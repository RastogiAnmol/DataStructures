#include "pch.h"
#include <iostream>
#include "ConsoleApplication.h"
using namespace std;
void Merge(int L[], int R[], int A[], int leftCount, int rightCount)
{
	int i = 0, j = 0, k = 0;
	while (i<leftCount && j<rightCount)
	{
		if (L[i]<R[j])
		{
			A[k++] = L[i++];
		}
		else
		{
			A[k++] = R[j++];
		}
	}
	while (i<leftCount)
	{
		A[k++] = L[i++];
	}
	while (j<rightCount)
	{
		A[k++] = R[j++];
	}
}
void MergeSort(int A[], int n)
{
	if (n<2)
	{
		return;
	}
	int mid = n / 2;
	int *L = (int*)malloc(mid*sizeof(int));
	int *R = (int*)malloc((n-mid) * sizeof(int));

	// Assigning left half in left subarray
	for (int i = 0; i < mid; i++)
	{
		L[i] = A[i];
	}
	// Assigning right half in right subarray
	for (int j = mid; j < n; j++)
	{
		R[j-mid] = A[j];
	}
	MergeSort(L, mid);
	MergeSort(R, n - mid);
	Merge(L, R, A, mid, n - mid);
	free(L);
	free(R);
}
int main()
{
	int A[] = { 4,7,8,1,5,3,2};
	MergeSort(A, 7);
	for (int i = 0; i < 7; i++)
	{
		cout << A[i] << " ";
	}
}
